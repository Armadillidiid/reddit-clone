name: Build and Push Image to AWS ECR
on:
  push:
    branches: [main]

jobs:
  build-and-push:
    name: Build and Push to ECR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, Tag, and Push the Image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: reddit-clone
          IMAGE_TAG: latest
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          NODE_ENV: production
          DB_NAME: ${{ secrets.DB_NAME }}
          DATABASE_URL: postgresql://$DB_USER:$DB_PASSWORD@$DB_HOST:5432/$DB_NAME?pgbouncer=true
          DIRECT_URL: postgresql://$DB_USER:$DB_PASSWORD@$DB_HOST:5432/$DB_NAME
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_BUCKET_REGION: ${{ secrets.AWS_BUCKET_REGION }}
          AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}
          AWS_CF_URL: ${{ secrets.AWS_CF_URL }}
          AWS_CF_KEY_PAIR_ID: ${{ secrets.AWS_CF_KEY_PAIR_ID }}
          AWS_CF_RSA_PRIVATE_KEY: ${{ secrets.AWS_CF_RSA_PRIVATE_KEY }}
          AWS_CF_DISTRIBUTION_ID: ${{ secrets.AWS_CF_DISTRIBUTION_ID }}
          REDIS_TOKEN: ${{ secrets.REDIS_TOKEN }}
          REDIS_URL: ${{ secrets.REDIS_URL }}
        run: |
          docker compose build -f docker-compose.prod.yml
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
